{"version":3,"file":"vendor.2f6bd789.js","sources":["../../node_modules/eventemitter3/index.js","../../node_modules/midi-mixer-plugin/lib/Assignment.js","../../node_modules/midi-mixer-plugin/lib/ButtonType.js","../../node_modules/midi-mixer-plugin/lib/index.js"],"sourcesContent":["'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Assignment = void 0;\r\n// public\r\nvar eventemitter3_1 = __importDefault(require(\"eventemitter3\"));\r\n// local\r\nvar _1 = require(\"./\");\r\n/**\r\n * An Assignment represents a single plugin-scoped entry in the MIDI Mixer\r\n * assignments list. This assignment can send events to MIDI Mixer as well as\r\n * react to hardware input coming from the board.\r\n *\r\n * ```\r\n * const foo = new Assignment(\"foo\", {\r\n *   name: \"Foo Entry\",\r\n * });\r\n *\r\n * foo.volume = 0.5;\r\n * foo.muted = true;\r\n * ```\r\n */\r\nvar Assignment = /** @class */ (function (_super) {\r\n    __extends(Assignment, _super);\r\n    /**\r\n     * @param id A unique ID for this assignment within this plugin.\r\n     * @param data Data used for MIDI Mixer to set up the assignment.\r\n     */\r\n    function Assignment(id, data) {\r\n        var _a, _b, _c, _d, _e, _f;\r\n        var _this = _super.call(this) || this;\r\n        _this._name = \"\";\r\n        _this._volume = 1;\r\n        _this._meter = 0;\r\n        _this._muted = false;\r\n        _this._assigned = false;\r\n        _this._running = false;\r\n        _this._throttle = 50;\r\n        var trimmedName = ((_a = data === null || data === void 0 ? void 0 : data.name) !== null && _a !== void 0 ? _a : \"\").trim();\r\n        if (!id || !trimmedName) {\r\n            throw new Error(\"Must provide an ID and name to create an assignment.\");\r\n        }\r\n        _this.id = id;\r\n        _this.name = trimmedName;\r\n        _this.volume = (_b = data.volume) !== null && _b !== void 0 ? _b : 1;\r\n        _this.meter = 0;\r\n        _this.muted = Boolean((_c = data.muted) !== null && _c !== void 0 ? _c : false);\r\n        _this.assigned = Boolean((_d = data.assigned) !== null && _d !== void 0 ? _d : false);\r\n        _this.running = Boolean((_e = data.running) !== null && _e !== void 0 ? _e : false);\r\n        _this.throttle = (_f = data.throttle) !== null && _f !== void 0 ? _f : 50;\r\n        $MM.onVolume(_this.id, function (volume) {\r\n            _this.emit(\"volumeChanged\", volume);\r\n        });\r\n        $MM.onPress(_this.id, _1.Button.Mute, function () {\r\n            _this.emit(\"mutePressed\");\r\n        });\r\n        $MM.onPress(_this.id, _1.Button.Assign, function () {\r\n            _this.emit(\"assignPressed\");\r\n        });\r\n        $MM.onPress(_this.id, _1.Button.Run, function () {\r\n            _this.emit(\"runPressed\");\r\n        });\r\n        return _this;\r\n    }\r\n    /**\r\n     * Remove the assignment from MIDI Mixer.\r\n     */\r\n    Assignment.prototype.remove = function () {\r\n        $MM.removeAssignment(this.id);\r\n    };\r\n    Object.defineProperty(Assignment.prototype, \"name\", {\r\n        /**\r\n         * The name of the assignment within MIDI Mixer. Setting this value updates\r\n         * the entry.\r\n         */\r\n        get: function () {\r\n            return this._name;\r\n        },\r\n        set: function (name) {\r\n            var trimmed = name.trim();\r\n            if (!trimmed)\r\n                throw new Error(\"Can't set an assignment name to be blank.\");\r\n            if (this._name === trimmed)\r\n                return;\r\n            this._name = trimmed;\r\n            $MM.updateAssignment(this.id, {\r\n                name: this._name,\r\n            });\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Assignment.prototype, \"volume\", {\r\n        /**\r\n         * The current indicator level for volume. Setting this updates the entry's\r\n         * volume level indicator within MIDI Mixer.\r\n         */\r\n        get: function () {\r\n            return this._volume;\r\n        },\r\n        set: function (level) {\r\n            var clampedVolume = Math.min(1, Math.max(0, level));\r\n            if (this._volume === clampedVolume)\r\n                return;\r\n            this._volume = clampedVolume;\r\n            $MM.setIndicator(this.id, _1.Indicator.Volume, this._volume);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Assignment.prototype, \"meter\", {\r\n        /**\r\n         * The current indicator level for meters. Setting this updates the entry's\r\n         * meter level for the next 150ms before falling off or being updated again.\r\n         */\r\n        get: function () {\r\n            return this._meter;\r\n        },\r\n        set: function (level) {\r\n            var _this = this;\r\n            if (this._meterTimer) {\r\n                clearTimeout(this._meterTimer);\r\n                delete this._meterTimer;\r\n            }\r\n            var clampedLevel = Math.min(1, Math.max(0, level));\r\n            this._meter = clampedLevel;\r\n            $MM.setIndicator(this.id, _1.Indicator.Meter, this._meter);\r\n            this._meterTimer = setTimeout(function () {\r\n                _this._meter = 0;\r\n            }, 150);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Assignment.prototype, \"muted\", {\r\n        /**\r\n         * The current \"muted\" status indicator. Setting this updates the entry's\r\n         * \"muted\" status within MIDI Mixer.\r\n         */\r\n        get: function () {\r\n            return this._muted;\r\n        },\r\n        set: function (muted) {\r\n            var sanitisedMuted = Boolean(muted);\r\n            if (this._muted === sanitisedMuted)\r\n                return;\r\n            this._muted = sanitisedMuted;\r\n            $MM.setButtonIndicator(this.id, _1.Button.Mute, this._muted);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Assignment.prototype, \"assigned\", {\r\n        /**\r\n         * The current \"assigned\" status indicator. Setting this updates the entry's\r\n         * \"assigned\" status within MIDI Mixer.\r\n         */\r\n        get: function () {\r\n            return this._assigned;\r\n        },\r\n        set: function (assigned) {\r\n            var sanitisedAssigned = Boolean(assigned);\r\n            if (this._assigned === sanitisedAssigned)\r\n                return;\r\n            this._assigned = Boolean(assigned);\r\n            $MM.setButtonIndicator(this.id, _1.Button.Assign, this._assigned);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Assignment.prototype, \"running\", {\r\n        /**\r\n         * The current \"running\" status indicator. Setting this updates the entry's\r\n         * \"running\" status within MIDI Mixer.\r\n         */\r\n        get: function () {\r\n            return this._running;\r\n        },\r\n        set: function (running) {\r\n            var sanitisedRunning = Boolean(running);\r\n            if (this._running === sanitisedRunning)\r\n                return;\r\n            this._running = Boolean(running);\r\n            $MM.setButtonIndicator(this.id, _1.Button.Run, this._running);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Assignment.prototype, \"throttle\", {\r\n        /**\r\n         * The minimum amount of time in milliseconds between volume change updates\r\n         * from MIDI Mixer. Some faders are very granular, so throttling these updates\r\n         * is sensible to ensure the good performance of plugins.\r\n         *\r\n         * Accepted values are anything between 50 to 1000.\r\n         *\r\n         * Defaults to 50.\r\n         */\r\n        get: function () {\r\n            return this._throttle;\r\n        },\r\n        set: function (throttle) {\r\n            var clampedThrottle = Math.min(1000, Math.max(50, throttle));\r\n            if (this._throttle === clampedThrottle)\r\n                return;\r\n            this._throttle = clampedThrottle;\r\n            $MM.setThrottle(this.id, this._throttle);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return Assignment;\r\n}(eventemitter3_1.default));\r\nexports.Assignment = Assignment;\r\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ButtonType = void 0;\r\n// public\r\nvar eventemitter3_1 = __importDefault(require(\"eventemitter3\"));\r\n// local\r\nvar _1 = require(\".\");\r\n/**\r\n * A ButtonType represents a single option in the list of generic buttons in\r\n * the Buttons tab of the UI. You can listen for incoming \"pressed\" events\r\n * from the board as well as change the button's indicator.\r\n *\r\n * ```\r\n * const foo = new ButtonType(\"start-streaming\", {\r\n *   name: \"Start Streaming\",\r\n * });\r\n *\r\n * foo.active = true;\r\n *\r\n * foo.on(\"pressed\", () => {\r\n *   // ...\r\n * });\r\n * ```\r\n */\r\nvar ButtonType = /** @class */ (function (_super) {\r\n    __extends(ButtonType, _super);\r\n    /**\r\n     * @param data Data to used for MIDI Mixer to set up the button type.\r\n     */\r\n    function ButtonType(id, data) {\r\n        var _a;\r\n        var _this = _super.call(this) || this;\r\n        _this._name = \"\";\r\n        _this._active = false;\r\n        var trimmedName = ((_a = data === null || data === void 0 ? void 0 : data.name) !== null && _a !== void 0 ? _a : \"\").trim();\r\n        if (!id || !trimmedName) {\r\n            throw new Error(\"Must provide an ID and a name to create a button type.\");\r\n        }\r\n        _this.id = id;\r\n        _this.name = trimmedName;\r\n        _this.active = Boolean(data.active);\r\n        $MM.onPress(_this.id, _1.Button.Generic, function () {\r\n            _this.emit(\"pressed\");\r\n        });\r\n        return _this;\r\n    }\r\n    ButtonType.prototype.remove = function () {\r\n        $MM.removeAssignment(this.id);\r\n    };\r\n    Object.defineProperty(ButtonType.prototype, \"name\", {\r\n        get: function () {\r\n            return this._name;\r\n        },\r\n        set: function (name) {\r\n            var trimmed = name.trim();\r\n            if (!trimmed)\r\n                throw new Error(\"Can't set a button type name to be blank.\");\r\n            if (this._name === trimmed)\r\n                return;\r\n            this._name = trimmed;\r\n            $MM.updateButtonType(this.id, {\r\n                name: trimmed,\r\n            });\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ButtonType.prototype, \"active\", {\r\n        get: function () {\r\n            return this._active;\r\n        },\r\n        set: function (active) {\r\n            var sanitisedActive = Boolean(active);\r\n            if (this._active === sanitisedActive)\r\n                return;\r\n            this._active = sanitisedActive;\r\n            $MM.setButtonIndicator(this.id, _1.Button.Generic, this._active);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return ButtonType;\r\n}(eventemitter3_1.default));\r\nexports.ButtonType = ButtonType;\r\n","\"use strict\";\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Button = exports.Indicator = void 0;\r\n__exportStar(require(\"./Assignment\"), exports);\r\n__exportStar(require(\"./ButtonType\"), exports);\r\nvar Indicator;\r\n(function (Indicator) {\r\n    Indicator[\"Volume\"] = \"volume\";\r\n    Indicator[\"Meter\"] = \"meter\";\r\n})(Indicator = exports.Indicator || (exports.Indicator = {}));\r\nvar Button;\r\n(function (Button) {\r\n    Button[\"Mute\"] = \"mute\";\r\n    Button[\"Assign\"] = \"assign\";\r\n    Button[\"Run\"] = \"run\";\r\n    Button[\"Generic\"] = \"generic\";\r\n})(Button = exports.Button || (exports.Button = {}));\r\n"],"names":["has","Object","prototype","hasOwnProperty","prefix","fn","context","once","emitter","event","TypeError","listener","EE","evt","_events","push","_eventsCount","Events","create","__proto__","eventNames","events","name","names","this","call","slice","getOwnPropertySymbols","concat","listeners","handlers","i","l","length","ee","Array","listenerCount","emit","a1","a2","a3","a4","a5","args","len","arguments","removeListener","apply","j","on","addListener","removeAllListeners","off","EventEmitter","prefixed","extendStatics","__extends","d","b","setPrototypeOf","d2","b2","p","constructor","__","__importDefault","mod","__esModule","default","defineProperty","value","Assignment","_super","id","data","_a","_b","_c","_d","_e","_f","_this","_name","_volume","_meter","_muted","_assigned","_running","_throttle","trimmedName","trim","Error","volume","meter","muted","Boolean","assigned","running","throttle","onVolume","onPress","_1","Button","Mute","Assign","Run","Assignment2","remove","removeAssignment","get","set","trimmed","updateAssignment","enumerable","configurable","level","clampedVolume","Math","min","max","setIndicator","Indicator","Volume","_meterTimer","clampedLevel","Meter","setTimeout","sanitisedMuted","setButtonIndicator","sanitisedAssigned","sanitisedRunning","clampedThrottle","setThrottle","require$$0","ButtonType","_active","active","Generic","ButtonType2","updateButtonType","sanitisedActive","__createBinding","o","m","k","k2","__exportStar","exports2","exports","require$$1"],"mappings":"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"}